#ifndef CORE_H
#define CORE_H

#define AUTO_FAIL_HIGHER 95

#define GAP_TESTS 5

enum SKILL_T {
	SKILL_LANGUAGE_MAGICK,
	SKILL_CHANNELING_ULGU,
	SKILL_CHANNELING_AQSHY,
	SKILL_CHANNELING_HYSH,
	SKILL_CHANNELING_SHYISH,
	SKILL_CHANNELING_GHUR,
	SKILL_CHANNELING_AZYR,
	SKILL_CHANNELING_CHAMON,
	SKILL_CHANNELING_GHYRAN,
	SKILL_NUM_SKILLS
};

extern char * SKILL_T_NAMES[SKILL_NUM_SKILLS];

enum CHARACTERISTIC_T {
	CHARACTERISTIC_WEAPONS_SKILL,
	CHARACTERISTIC_BALLISTIC_SKILL,
	CHARACTERISTIC_STRENGTH,
	CHARACTERISTIC_TOUGHNESS,
	CHARACTERISTIC_INITIATIVE,
	CHARACTERISTIC_AGILITY,
	CHARACTERISTIC_DEXTERITY,
	CHARACTERISTIC_INTELLIGENCE,
	CHARACTERISTIC_WILLPOWER,
	CHARACTERISTIC_FELLOWSHIP,
	CHARACTERISTIC_NUM_CHARACTERISTICS
};

extern char* CHARACTERISTIC_T_NAMES[CHARACTERISTIC_NUM_CHARACTERISTICS];

enum TALENT_T {
	TALENT_INSTINCTIVE_DICTION,
	TALENT_AETHYRIC_ATTUNEMENT_ULGU,
	TALENT_AETHYRIC_ATTUNEMENT_AQSHY,
	TALENT_AETHYRIC_ATTUNEMENT_HYSH,
	TALENT_AETHYRIC_ATTUNEMENT_SHYSH,
	TALENT_AETHYRIC_ATTUNEMENT_GHUR,
	TALENT_AETHYRIC_ATTUNEMENT_AZYR,
	TALENT_AETHYRIC_ATTUNEMENT_CHAMON,
	TALENT_AETHYRIC_ATTUNEMENT_GHYRAN,
	TALENT_ARCANE_MAGICK_ULGU,
	TALENT_ARCANE_MAGICK_AQSHY,
	TALENT_ARCANE_MAGICK_HYSH,
	TALENT_ARCANE_MAGICK_SHYSH,
	TALENT_ARCANE_MAGICK_GHUR,
	TALENT_ARCANE_MAGICK_AZYR,
	TALENT_ARCANE_MAGICK_CHAMON,
	TALENT_ARCANE_MAGICK_GHYRAN,
	TALENT_LUCK,
	TALENT_PERFECT_PITCH,
	TALENT_NUM_TALENTS
};

extern char * TALENT_T_NAMES[TALENT_NUM_TALENTS];

enum TRAIT_T {
	TRAIT_UNDEAD,
	TRAIT_DEMONIC,
	TRAIT_NUM_TRAITS
};

extern char* TRAIT_T_NAMES[TRAIT_NUM_TRAITS];

enum RACE_T {
	RACE_ELF,
	RACE_HUMAN,
	RACE_OTHER,
	RACE_NUM_RACES
};

extern char* RACE_T_NAMES[RACE_NUM_RACES];

enum TRAPPING_T {
	TRAPPING_MAGICK_STICK_EVIL,
	TRAPPING_MAGICK_STICK_ULGU,
	TRAPPING_MAGICK_STICK_AQSHY,
	TRAPPING_MAGICK_STICK_HYSH,
	TRAPPING_MAGICK_STICK_SHYSH,
	TRAPPING_MAGICK_STICK_GHUR,
	TRAPPING_MAGICK_STICK_AZYR,
	TRAPPING_MAGICK_STICK_CHAMON,
	TRAPPING_MAGICK_STICK_GHYRAN,
	TRAPPING_MAGICK_KEY_ULGU,
	TRAPPING_MAGICK_KEY_AQSHY,
	TRAPPING_MAGICK_KEY_HYSH,
	TRAPPING_MAGICK_KEY_SHYSH,
	TRAPPING_MAGICK_KEY_GHUR,
	TRAPPING_MAGICK_KEY_AZYR,
	TRAPPING_MAGICK_KEY_CHAMON,
	TRAPPING_MAGICK_KEY_GHYRAN,
	TRAPPING_NUM_TRAPPINGS
};

extern char* TRAPPING_T_NAMES[TRAPPING_NUM_TRAPPINGS];

struct CHARACTER_T {
	char name[100];
	enum RACE_T race;
	int characteristic_starting[CHARACTERISTIC_NUM_CHARACTERISTICS];
	int characteristic_advances[CHARACTERISTIC_NUM_CHARACTERISTICS];
	int skill_advances[SKILL_NUM_SKILLS];
	int talents[TALENT_NUM_TALENTS];
	int traits[TRAIT_NUM_TRAITS];

	int trappings[TRAPPING_NUM_TRAPPINGS];

	int beast_wounds;
	int wounds_left;
	int fortune_points;
	int fate_points;
	int resolve_points;
	int resilience_points;

	int ap_mundane;
	int ap_magical;
	int ap_shield;
};

struct ENGAGEMENT_T {
	struct CHARACTER_T * aggressor;
	struct CHARACTER_T * defender;
	int num_defenders;
	int magick_bonus;
	int dispel_bonus_sl;

	int sl_channeled;

	int damage_applied;
	int minor_misscasts;
	int major_misscasts;

	int rounds;

	int total_cast_sls;
	int total_cast_overcasts;
	int total_cast_successes;

	int round_of_last_success;
	int gap_counters[10];
};

#define GET_CHARACTERISTIC(character, characteristic) (character->characteristic_starting[characteristic] + character->characteristic_advances[characteristic])
#define GET_SKILL(character, skill) (GET_CHARACTERISTIC(character, skill_to_char_map[skill]) + character->skill_advances[skill])

#define GET_CHARACTERISTIC_BONUS(character, characteristic) (GET_CHARACTERISTIC(character, characteristic)/10)
#define GET_SKILL_BONUS(character, skill) (GET_SKILL(character, skill)/10)

#define FAST_RAND_MAX 32767

int fast_rand(void);
int d(int sides);
void reset_character(struct CHARACTER_T * character);
void report_character(struct CHARACTER_T * character);
void reset_engagement(struct ENGAGEMENT_T * engagement);

extern enum CHARACTERISTIC_T skill_to_char_map [SKILL_NUM_SKILLS];

#endif
